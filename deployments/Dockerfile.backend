####
FROM rust:1-slim-buster as rust-web-backend_builder

ENV SQLX_OFFLINE=true
ENV TZ=Asia/Shanghai
WORKDIR /opt/rust-web

RUN mkdir -p /root/.cargo
COPY backend/src         ./src
COPY backend/static      ./static
COPY backend/migrations  ./migrations
ADD backend/Cargo.lock   backend/Cargo.toml  backend/sqlx-data.json ./
ADD backend/src/.git-build-info.yaml  ./src/git-build-info.yaml

# ADD deployments/cargo_config.toml  /root/.cargo/config
# RUN sed -i 's#http://\(deb\|security\).debian.org#https://mirrors.aliyun.com#g' /etc/apt/sources.list

RUN apt update && \
  apt -y upgrade && \
  apt install -y libssl-dev pkg-config musl-tools && \
  apt-get clean
# ?? libudev-dev librust-openssl-sys-dev
# openssl, tzdata is already the newest version

RUN apt-get install -y ca-certificates wget libfindbin-libs-perl make && \
  wget https://www.openssl.org/source/openssl-1.1.1t.tar.gz && \
  tar -xzvf openssl-1.1.1t.tar.gz && cd openssl-1.1.1t && \
  ./config --prefix=/usr/local/openssl --openssldir=/usr/local/openssl && \
  make && \
  make install

ENV OPENSSL_DIR=/usr/local/openssl

RUN rustup target add x86_64-unknown-linux-musl && \
  cargo build --target x86_64-unknown-linux-musl --release

####
FROM alpine:latest AS rust-web_runtime
ENV TZ=Asia/Shanghai
WORKDIR /opt/rust-web

COPY --from=rust-web-backend_builder \
  /opt/rust-web/target/x86_64-unknown-linux-musl/release/backend ./backend

EXPOSE 3010
# ENTRYPOINT ["./backend"]
# "--threads=0"
CMD ["./backend", "--config=configs/prod.yaml", "--addr=0.0.0.0", "--port=3010", "--release"]
